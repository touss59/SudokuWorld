@model SudokuWorld.Models.Grid
@{
    ViewData["Title"] = "Index";
}
<style>
    h1 {
        text-align: center;
        margin-bottom: 30px;
    }

    .container {
        text-align:center;
        width: 60%;
    }

    .number {
        text-align: center;
        width: 100%;
    }

    table {
        margin: 1em auto;
    }

    td {
        height: 30px;
        width: 30px;
        border: 1px solid;
        text-align: center;
    }

        td:first-child {
            border-left: solid;
        }

        td:nth-child(3n) {
            border-right: solid;
        }

    tr:first-child {
        border-top: solid;
    }

    tr:nth-child(3n) td {
        border-bottom: solid;
    }
</style>
<div>
    <h1>Let's go</h1>
    <div class="container">
        <span id="timer" style="border:solid;border-color:black;padding:2px">Timer : 0</span>
        <table>
            @{
                for (int i = 0; i < 9; i++)
                {
                    <tr>
                        @for (int j = i * 9; j < i * 9 + 9; j++)
                        {
                            <td>
                                <input class="number" type="text" value="@Model.Value[j]" />
                            </td>
                        }
                    </tr>
                }
            }
        </table>
        <button id="submitGrid" class="alert-secondary">Submit</button>
        <button id="correction" class="alert-secondary">Correction</button>
        <a id="newGrid" href="/Players/Grille/NewGrid?id=@Model.Id" class="btn alert-success"  style="display:none;">Essayer une nouvelle grille</a>
    </div>
</div>
<script>
    let numbers = document.getElementsByClassName("number");;
    let numberString = "";;
    let timer = 0;
    let interval = setInterval(function () {
        timer += 1;
        document.getElementById("timer").innerHTML =`Timer : ${timer}`;
        console.log(timer);
    }, 1000);

    for (let i = 0; i < numbers.length; i++) {
        if (numbers[i].value != 0) {
            numbers[i].disabled = true;
        }
    }

    function UserResponse() {
        numberString = "";
        numbers = document.getElementsByClassName("number");
        for (let i = 0; i < numbers.length; i++) {
            numberString += numbers[i].value;
        }
        //document.getElementById("submitGrid").disabled = true;
    }
    //***********************************************
    //Call mehtod via click event
    document.getElementById("submitGrid").addEventListener("click", function () {
        UserResponse();
        SubmitGrid();
    });

    document.getElementById("correction").addEventListener("click", function () {
        numberString = null;
        SubmitGrid();
    });

    function SubmitGrid() {
     $.ajax({
       url: '@Url.Action("SubmitGrid", "Grille")',
       type: 'Post',
       dataType: 'json',
         cache: false,
         data: { 'id': @Model.Id, 'timer': timer, 'numbers': numberString },
         success: function (response) {
             alert(response.info);
             if (response.info != "La grille a été mal complétée") {
                 clearInterval(interval);
                 if (response.info == "Voici la correction") {
                     numbers = document.getElementsByClassName("number");
                     $('.number').css('background-color', ''); 
                     for (let i = 0; i < numbers.length; i++) {
                         numbers[i].value = response.result[i];
                     }
                 }
                 $(".alert-secondary").hide();
                 $(".alert-success").show();
             } else {
                 let errorsIndex = response.result.split(",");
                 numbers = document.getElementsByClassName("number");
                 console.log(response.result);
                 $('.number').css('background-color', '');
                 let indexError = 0;
                 for (let i = 0; i < numbers.length; i++) {
                     if (i = errorsIndex[indexError]) {
                         numbers[i].style.backgroundColor = "red";
                         indexError++;
                     }
                 }
             }
       },
       error: function () {
        alert('Error occured');
       }
     });
    }

</script>


